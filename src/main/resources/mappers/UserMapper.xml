<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chaoxing.filemanagement.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.chaoxing.filemanagement.po.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, password, insert_time, is_delete, dept_id, email
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chaoxing.filemanagement.po.User" >
    insert into t_user (id, name, password, 
      insert_time, is_delete, dept_id, 
      email)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{insertTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chaoxing.filemanagement.po.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="insertTime != null" >
        insert_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chaoxing.filemanagement.po.User" >
    update t_user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chaoxing.filemanagement.po.User" >
    update t_user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER},
      dept_id = #{deptId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByEmail" resultMap="BaseResultMap" parameterType="map">
    select <include refid="Base_Column_List"/>
    from t_user
    where email = #{email,jdbcType=VARCHAR}
  </select>
  <select id="login" resultMap="BaseResultMap" parameterType="map">
      select <include refid="Base_Column_List"/>
      from t_user
      where email = #{email,jdbcType=VARCHAR}
      and password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectByDeptId" parameterType="map" resultMap="BaseResultMap">
      select <include refid="Base_Column_List"/>
      from t_user
      where dept_id== #{deptId,jdbcType=INTEGER
  </select>
</mapper>